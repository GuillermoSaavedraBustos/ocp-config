node('nodejs') {
  stage('Prepare node') {
    sh "curl -O https://nodejs.org/download/release/v6.10.3/node-v6.10.3-linux-x64.tar.gz"
    sh "tar xzf node-v6.10.3-linux-x64.tar.gz"
  }
  
  stage('Checkout Source') {
    echo "Checkout Source"
    dir('ose-wallapp-ui') {
      git 'https://github.com/hsavolai/ose-wallapp-ui.git'
    }
    dir('ose-wallapp-router-test') {
      git 'https://github.com/hsavolai/ose-router-ui.git'
    }
    sh "./node-v6.10.3-linux-x64/bin/npm config set registry http://nexus3:8081/repository/npm-all/"  
    sh "cp -r ./ose-wallapp-router-test ose-wallapp-router-prod"
  }

  def packageVersion = null

  def buildNumber = sh (
    script: "cd ose-wallapp-router-test; git rev-list --all --count; cd ..",
    returnStdout: true
  ).trim()

  def unixTime = sh (
    script: 'date +"%s"',
    returnStdout: true
   ).trim()

  stage('Resolve test deps') {
    sh "curl -O https://nodejs.org/download/release/v6.10.3/node-v6.10.3-linux-x64.tar.gz"
    sh "tar xzf node-v6.10.3-linux-x64.tar.gz"
    sh "./node-v6.10.3-linux-x64/bin/npm install --prefix ./ose-wallapp-ui"
    //sh "./node-v6.10.3-linux-x64/bin/npm install @angular/cli@latest --prefix ./ose-wallapp-ui"
    sh "./node-v6.10.3-linux-x64/bin/npm install --prefix ./ose-wallapp-router-test"
  }

  stage('Test & Analysis') {
    echo "Here should be ose-wallapp-ui Angular2 tests either with headless chrome or phantomjs for the UI/Karma"
    sh "./node-v6.10.3-linux-x64/bin/npm test --prefix ./ose-wallapp-router-test"
  }
  
  stage('Define version') {
    def version = getVersionFromPackageJs("./ose-wallapp-router-prod/package.json")
    packageVersion = "${version}-${buildNumber}_${unixTime}"
    echo "The final package version is ${packageVersion}"
  }
  
  stage('Build and package') {
    echo "Build production package"
    sh "./node-v6.10.3-linux-x64/bin/npm install --prefix ./ose-wallapp-router-prod --production"
    sh "cd ./ose-wallapp-ui; ../node-v6.10.3-linux-x64/bin/node ./node_modules/@angular/cli/bin/ng build --progress false --base-href /wall/ --output-path ../ose-wallapp-router-prod/public/wall -prod;cd .."
    
    echo "Prepare production package"
    sh "rm -rf ./ose-wallapp-router-prod/test"
    sh "rm -rf ./ose-wallapp-router-prod/LICENSE"
    sh "rm -rf ./ose-wallapp-router-prod/README.md"
    sh "rm -rf ./ose-wallapp-router-prod/.git"
    
    sh "tar -C ./ose-wallapp-router-prod -czf tmp-ose-wall-router-ui-${packageVersion}.tar.gz ."
  }
  
  stage('Publish to Nexus') {
     echo "Publish to Nexus"
     sh "curl -v -u admin:admin123 --upload-file tmp-ose-wall-router-ui-${packageVersion}.tar.gz http://nexus3:8081/repository/maven-releases/org/savolainen/ose-wall-router-ui/${packageVersion}/ose-wall-router-ui-${packageVersion}.tar.gz"  
   }

  stage('Build OpenShift Image') {
    sh "oc project my-dev-project"
    def GET_BUILD_OUTPUT = sh (
       script: "oc get all -l build=ose-wall-router-ui -n my-dev-project 2>&1",
      returnStdout: true
    ).trim()
  
    echo "Get build output: ${GET_BUILD_OUTPUT}"
    
    if (GET_BUILD_OUTPUT.contains("No resources found.")){
      sh "oc new-build --binary=true --name=ose-wall-router-ui -i=nodejs -n my-dev-project"
    }
    sh "curl -O http://nexus3:8081/repository/maven-releases/org/savolainen/ose-wall-router-ui/${packageVersion}/ose-wall-router-ui-${packageVersion}.tar.gz"
    sh "oc start-build ose-wall-router-ui --from-archive=./ose-wall-router-ui-${packageVersion}.tar.gz -n my-dev-project"
    openshiftVerifyBuild bldCfg: 'ose-wall-router-ui', checkForTriggeredDeployments: 'false', namespace: 'my-dev-project', verbose: 'false', waitTime: ''
    sh "oc tag my-dev-project/ose-wall-router-ui:latest my-dev-project/ose-wall-router-ui:${packageVersion} -n my-dev-project"
   }



}

      
 
// Convenience Functions to read variables from the pom.xml
def getVersionFromPackageJs(packagejs) {
  def matcher = readFile(packagejs) =~ '"version": "(.+)",'
  matcher ? matcher[0][1] : null
}


