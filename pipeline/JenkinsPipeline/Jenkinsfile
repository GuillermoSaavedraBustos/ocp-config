// Here it shall be
node('maven') {

  def mvnCmd = "mvn -s ./nexus-openshift-settings.xml -B"

  stage('Checkout Source') {
    echo "Checkout Source"
    git 'https://github.com/hsavolai/ose-wall-service.git'
  }

  // Extract version and other properties from the pom.xml
  def groupId    = getGroupIdFromPom("pom.xml")
  def artifactId = getArtifactIdFromPom("pom.xml")
  def artifactVersion    = ""

  def buildNumber = sh (
    script: "git rev-list --all --count",
    returnStdout: true
  )

  stage('Define version') {
    sh "${mvnCmd} clean build-helper:parse-version versions:set '-DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.incrementalVersion}-${buildNumber}($BUILD_NUMBER)'"
    artifactVersion = getVersionFromPom("pom.xml")
    echo "The final artifact version is ${artifactVersion}"
  }
  

  stage('Unit Tests') {
    echo "Run unit tests"
    sh "${mvnCmd} -P test clean test"
  }
  
  stage('Code Analysis') {
    echo "Code analysis"
    sh "${mvnCmd} sonar:sonar -Dsonar.host.url=http://sonarqube:9000/ -Dsonar.projectName=${JOB_BASE_NAME}"
  }
  
  stage('Publish to Nexus') {
    echo "Publish to Nexus"
    sh "${mvnCmd} -P release clean deploy -DskipTests=true -Dpackaging=jar -DrepositoryId=nexus -DaltDeploymentRepository=nexus::default::http://nexus3:8081/repository/maven-releases"
  }

}

//node('nodejs') {
//  sh "ls" 
//}

// Convenience Functions to read variables from the pom.xml
def getVersionFromPom(pom) {
  def matcher = readFile(pom) =~ '<version>(.+)</version>'
  matcher ? matcher[0][1] : null
}
def getGroupIdFromPom(pom) {
  def matcher = readFile(pom) =~ '<groupId>(.+)</groupId>'
  matcher ? matcher[0][1] : null
}
def getArtifactIdFromPom(pom) {
  def matcher = readFile(pom) =~ '<artifactId>(.+)</artifactId>'
  matcher ? matcher[0][1] : null
}
